#include "ros/ros.h"
#include "geomtry_msgs/Vector3.h"
#include "Control.hpp"

#define DEFAULT_SPEED_XY 0.3
#define DEFAULT_SPEED_R 0.6

#define MAX_SPEED_XY 0.8
#define MAX_SPEED_R 0.9

#define SPEED_XY_SHIFT 0.1
#define SPEED_R_SHIFT 0.2

Control::Control() : keyboard(0){
    velocityCommandPublisher = nodeHandle.advertise<geometry_msgs::Vector3>("youbot_velocity_command", 1);
}

Control::~Control(){

}

void Control::keyboardControl(){
    static double speedXY = DEFAULT_SPEED_XY, speedR = DEFAULT_SPEED_R;
    static bool controlEnable = 1;

    if(keyboard.keyPush(KEY_P)){
        controlEnable = !controlEnable;
        if(!controlEnable)
            setVelocity(0, 0, 0);
    }

    double vx = 0, vy = 0, vr = 0;

    if (controlEnable) {
        if (keyboard.keyPush(KEY_1)) {
            speedXY -= SPEED_XY_SHIFT;
            speedR -= SPEED_R_SHIFT;
        }

        if (keyboard.keyPush(KEY_2)) {
            speedXY += SPEED_XY_SHIFT;
            speedR += SPEED_R_SHIFT;
        }

        if (speedXY < 0)speedXY = 0;
        if (speedR < 0)speedR = 0;

        if (speedXY > MAX_SPEED_XY)speedXY = MAX_SPEED_XY;
        if (speedR > MAX_SPEED_R)speedR = MAX_SPEED_R;

        if (keyboard.keyDown(KEY_UP))vx += speedXY;
        if (keyboard.keyDown(KEY_DOWN))vx += -speedXY;
        if (keyboard.keyDown(KEY_LEFT))vy += speedXY;
        if (keyboard.keyDown(KEY_RIGHT))vy += -speedXY;
        if (keyboard.keyDown(KEY_RIGHTCTRL))vr += speedR;
        if (keyboard.keyDown(KEY_RIGHTSHIFT))vr += -speedR;


        setVelocity(vx, vy, vr);
    }
}

void Control::setVelocity(double vx, double vy, double vr){
    geometry_msgs::Vector3 velocity;
    velocity.x = vx;
    velocity.y = vy;
    velocity.z = vr;
    velocityCommandPublisher.publish(velocity);
}
